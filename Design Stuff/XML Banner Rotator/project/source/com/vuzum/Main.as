/*** XML Banner Rotator - Flabell.com Product, August 2009* @author Vuzum Media, LLC.* http://www.vuzum.com* email: office@vuzum.com*/ package com.vuzum{	/*	 * FLASH IMPORTS	 */	import flash.text.TextField;		import flash.display.DisplayObject;		import flash.display.Stage;	import flash.display.StageScaleMode;	import flash.display.Loader;	import flash.display.MovieClip;		import flash.events.Event;	import flash.net.URLRequest;		import flash.system.LoaderContext;			/*	 * OTHER IMPORTS	 */	import caurina.transitions.*;	import caurina.transitions.properties.*;			/*	 * MY IMPORTS 	 */	import com.vuzum.utils.*;	import flash.events.ProgressEvent;	import flash.text.TextFieldType;	import flash.events.IOErrorEvent;		import com.vuzum.banner.Banner;		import flash.display.StageAlign;	import flash.text.StyleSheet;	import flash.net.URLLoader;		/**	 * THE CLASS	 */	public class Main extends MovieClip 	{		/**		 * STATIC MEMBERS		 */		private static var instance : Main;		/**		 * COMPONENTS INSIDE		 */		public var mcBanner : Banner;					/**		 * INTERNAL MEMBERS		 */		// HANDLERS VARS		public var currPressedObject : Object;		// XML VARS		private var xmlPath : String;		public var pathTo : String = "";				private var tempFlashVar : String;		private var ttraceString : String = "";				public var stageW : Number = -1;		public var stageH : Number = -1;				/**		 * @return SINGLETON instance of the class		 */		public static function getInstance() : Main 		{			if (instance == null)				instance = new Main();			return instance;		}		/**		 * CONSTRUCTOR		 */		public function Main() 		{			instance = this;						// Stage settings			stage.scaleMode = StageScaleMode.NO_SCALE;			stage.align = StageAlign.TOP_LEFT;			stage.showDefaultContextMenu = false;							// Prototypes						new Prototypes();						// TWEENER init the colors			ColorShortcuts.init();			FilterShortcuts.init();						// start aplication			init();		}				/**		 * INIT THE APPLICATION		 */		public function init() : void		{			/*			 * READ THE FLASH VARS			 */			 			tempFlashVar = stage.loaderInfo.parameters.pathToFiles;						if(tempFlashVar != "" && tempFlashVar != null )			{				pathTo = tempFlashVar;			}			// default value for FLASH IDE			else 			{				pathTo = "banner/";			}			 			// XML PATH			tempFlashVar = stage.loaderInfo.parameters.xmlPath;						if(tempFlashVar != "" && tempFlashVar != null )			{				xmlPath = tempFlashVar;			}			// default value for FLASH IDE			else 			{				xmlPath = "xml/banner.xml";			}						// read the dimensions of the pool			var tempWidth : String = stage.loaderInfo.parameters.stageW;			if(tempWidth != "" && tempWidth != null)			{				stageW = Number(tempWidth);			}			else			{				stageW = stage.stageWidth;			}						var tempHeight : String = stage.loaderInfo.parameters.stageH;			if(tempHeight != "" && tempHeight != null)			{				stageH = Number(tempHeight);			}			else			{				stageH = stage.stageHeight;			}						/*			 * LOAD LANGUAGE XML and then START THE APPLICATION			 */		 	//if(!Prototypes.isStolen())				mcBanner.init(pathTo + xmlPath, stageH, stageW);		}		/************************************************************		 *		 *					AUXILIAR FUNCTIONS		 * 		 *************************************************************/						 /*		 * Create ttrace function - simulate trace in the browser		 */				public function ttrace(str : String = "Ttrace was called.") : void		{//			var disableTrace : Boolean = true;			var disableTrace : Boolean = false;						if(!disableTrace)			{				var tracer : TextField = TextField(this.addChild(new TextField()));								// properties				tracer.type = TextFieldType.DYNAMIC;				tracer.x = 10;				tracer.y = 10;				tracer.width = 400; 				tracer.height = 300; 				tracer.border = true;				tracer.background = true;								tracer.multiline = true;				tracer.wordWrap = true;				tracer.border = true;				tracer.background = true;								this.ttraceString += str + "\n";				tracer.text = this.ttraceString;			}		};				public function clearTtrace() : void		{			this.ttraceString = "";		}		}}